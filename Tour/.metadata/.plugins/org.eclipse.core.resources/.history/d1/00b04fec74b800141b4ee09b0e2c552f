// Copyright 2007-2014 metaio GmbH. All rights reserved.
package com.metaio.Example;
import java.io.File;
import java.io.IOException;
import java.util.Locale;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Intent;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.Toast;

import com.metaio.sdk.ARELActivity;
import com.metaio.sdk.MetaioDebug;
import com.metaio.tools.io.AssetsManager;


@SuppressLint("SetJavaScriptEnabled")
public class MainActivity extends Activity
{
	


	/**
	 * Task that will extract all the assets
	 */
	AssetsExtracter mTask;
	
	/**
	 * Progress view
	 */
	View mProgress;

	/**
	 * True while launching a tutorial, used to prevent
	 * multiple launches of the tutorial
	 */

	@Override
	protected void onCreate(Bundle savedInstanceState) 
	{
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.webview);
		
		// Enable metaio SDK log messages based on build configuration
		MetaioDebug.enableLogging(BuildConfig.DEBUG);
		 
		mProgress = findViewById(R.id.progress);
	
		// extract all the assets
		mTask = new AssetsExtracter();
		mTask.execute(0);
		Intent intent = new Intent(getApplicationContext(),TutorialLocationBasedAR.class);
		startActivity(intent);
	}
	
	@Override
	protected void onResume() 
	{
		super.onResume();
	
	}
	
	@Override
	protected void onPause() 
	{
		super.onPause();
		
	}

	@Override
	public void onBackPressed() 
	{
		// if web view can go back, go back
		
	}
	
	/**
	 * This task extracts all the assets to an external or internal location
	 * to make them accessible to Metaio SDK
	 */
	private class AssetsExtracter extends AsyncTask<Integer, Integer, Boolean>
	{

		@Override
		protected void onPreExecute() 
		{
			mProgress.setVisibility(View.VISIBLE);
		}
		
		@Override
		protected Boolean doInBackground(Integer... params) 
		{
			try 
			{
				// Extract all assets except Menu. Overwrite existing files for debug build only.
				final String[] ignoreList = {"Menu", "webkit", "sounds", "images", "webkitsec"};
				AssetsManager.extractAllAssets(getApplicationContext(), "", ignoreList, BuildConfig.DEBUG);
			} 
			catch (IOException e) 
			{
				MetaioDebug.printStackTrace(Log.ERROR, e);
				return false;
			}

			return true;
		}
		
		@Override
		protected void onPostExecute(Boolean result) 
		{
		
		}
	}
	
	/**
	 * Display a short toast message
	 * @param message Message to display
	 */
	private void showToast(final String message)
	{
		Toast toast = Toast.makeText(getApplicationContext(), message, Toast.LENGTH_SHORT);
		toast.show();
	}
	
	
		

		
}

